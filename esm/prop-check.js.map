{"version":3,"sources":["../src/prop-check.js"],"names":["generateProps","aPropTypes","aProps","ret","propTypes","defaultProps","Array","isArray","_propTypes","forEach","key","type","Object","keys","propType","default","undefined","getPropType","typeMaps","String","value","PropTypes","string","array","object","Boolean","bool","Function","func","Number","number","Symbol","symbol","_getPropType","required","any","v","find","instanceOf","isRequired","isFunction","validator","retType","props","propName","componentName","Error","oneOfType","map","propcheck","target"],"mappings":"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","sourcesContent":["\nimport PropTypes from 'prop-types';\n\nfunction generateProps(aPropTypes, aProps) {\n  const ret = { propTypes: {}, defaultProps: {} };\n  if (!aPropTypes) return ret;\n\n  if (Array.isArray(aPropTypes)) {\n    const _propTypes = {};\n    aPropTypes.forEach(key => _propTypes[key] = { type: null });\n    aPropTypes = _propTypes;\n  }\n\n  Object.keys(aPropTypes).forEach(key => {\n    let propType = aPropTypes[key];\n\n    if (propType.default !== undefined) ret.defaultProps[key] = propType.default;\n\n    function getPropType(propType) {\n      const typeMaps = [\n        { type: String, value: PropTypes.string },\n        { type: Array, value: PropTypes.array },\n        { type: Object, value: PropTypes.object },\n        { type: Boolean, value: PropTypes.bool },\n        { type: Function, value: PropTypes.func },\n        { type: String, value: PropTypes.string },\n        { type: Number, value: PropTypes.number },\n        { type: Symbol, value: PropTypes.symbol },\n      ];\n      function _getPropType(type, required) {\n        let ret = PropTypes.any;\n        let v = typeMaps.find(v => v.type === type);\n        if (v) ret = v.value;\n        else if (v instanceof type) PropTypes.instanceOf(type);\n        if (required) ret = ret.isRequired;\n        return ret;\n      }\n\n      if (Object.isFunction(propType)) return _getPropType(propType);\n\n      const { type, required, validator } = propType;\n\n      let retType;\n      if (validator) {\n        return function (props, propName, componentName) {\n          if (!validator(props[propName])) return new Error(`Invalid prop '${propName}' supplied to '${componentName}'. Validation failed.`);\n        };\n      }\n      if (!type) retType = required ? PropTypes.any.isRequired : PropTypes.any;\n\n      if (Array.isArray(type)) retType = PropTypes.oneOfType(type.map(v => _getPropType(v, required)));\n      else retType = _getPropType(type, required);\n      return retType;\n    }\n    // eslint-disable-next-line\n    ret.propTypes[key] = getPropType(propType);\n  });\n  return ret;\n}\n\n\nexport default function propcheck(target) {\n  const { props } = target;\n  if (!props) return target;\n\n  // eslint-disable-next-line\n  const { propTypes, defaultProps } = generateProps(props || {});\n  if (defaultProps && !target.defaultProps) target.defaultProps = defaultProps;\n  // eslint-disable-next-line\n  if (propTypes && !target.propTypes) target.propTypes = propTypes;\n  return target;\n}\n"],"file":"prop-check.js"}